

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.encoding = 'UTF-8'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Criteria API
    annotationProcessor('org.hibernate:hibernate-jpamodelgen:5.4.21.Final')

    // MapStruct
    implementation("org.mapstruct:mapstruct:1.4.0.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.4.0.Final")

    // Swagger, OpenAPI
    implementation("org.springdoc:springdoc-openapi-ui:1.4.8")
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/")
}

sourceSets {
    main {
        java {
            srcDirs += ["$buildDir/generated/"]
        }
    }
}
